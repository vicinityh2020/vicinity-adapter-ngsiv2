// Copyright (C) 2018 ATOS Spain S.A.
// 
// This file is part of VICINITY.
// 
// VICINITY is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// VICINITY is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with VICINITY.  If not, see <http://www.gnu.org/licenses/>.

'use strict';
var config = {};

config.server = {
  /**
   * Deployment mode: 'development' or 'production'
   */
  mode: 'development',
  /**
   * Development server configuration
   */
  development: {
     /**
     * Server listening port (to configure Express)
     */
    port: 10000,
    /**
     * Sink to send the asynchronous publications (from RZs' Orions)
     */
     subscription_endpoint: 'http://localhost:10000/subscriptions'
    
  },
  /**
   * Production server configuration
   */
  production: {
     /**
     * Server listening port (to configure Express)
     */
    port: 10000,
    /**
     * Sink to send the asynchronous publications (from RZs' Orions)
     */
    subscription_host_endpoint: 'http://localhost:10000/subscriptions'
  },
}

  /**
   * Orion CB data discovery. Specification of the different context brokers
   * Parameters:
   * - rz: Name that specifies whether the queries require an X-Auth-Token in the HTTP header
   * - area (mandatory): North-west and south-east corners of the rectangle that encompasses the RZs. It is needed for indentifying the devices
   */
  config.orion = {

    /**
     * Orion CB location
     */
    endpoint: 'http://localhost:1026/v2/',

    /**
     * FIWARE Service attribute
     */
    'fiware-service': '<your service>',

    /**
     * FIWARE Service-path attribute
     */
    'fiware-servicepath': '<your service path>',
  };

  /**
   * Configuration of the VICINITY adapter
   */
  config.adapter = {

    /**
     * Adapter identifier. NOTE: It must match the ID set at the Agent configuration file
     */
      'adapter-id': 'adapter-ngsiv2',

      /**
       * The adapter supports the active discovery, where it is responsible for registering their own devices
       */
      active_discovery: false,

      /**
       * If the active discovery is enabled, the adapter has to 
       */
      agent_endpoint: 'http://localhost:9997/agent/objects',

      /**
       * Before sending the data upon request, it might be possible to assess that it is compliant with Vicinity's TD
       */
      thing_description_validation: false,

      /**
       * If the above option is enabled, 
       */
      validation_endpoint: 'https://vicinity.bavenir.eu:3000/api/repository/validate'

  };


  /**
   * 
   */
  config.logging = {
    /**
     * Configures the log level. Appropriate values are: 
     *    silly=0(lowest), debug=1, verbose=2, info=3, warn=4, error=5(highest)
     */
    logLevel: 'debug',
  }

module.exports = config;